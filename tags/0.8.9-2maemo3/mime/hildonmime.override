/* -*- Mode: C; c-basic-offset: 4 -*-
 * python-hildon - Python bindings for the Hildon toolkit.
 *
 *   hildon.override: overrides for the hildon module.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
 * USA
 */
%%
headers
#define NO_IMPORT_PYGOBJECT
#include <pygobject.h>

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif
#include <libintl.h>

#include <glib-object.h>
#include <hildon-mime.h>

#include "hildonmime-types.h"

typedef PyObject *(*list_item_converter)(gpointer item);
typedef gpointer *(*pylist_item_converter)(PyObject *obj);

static PyObject *glist_to_pylist(GList *list, list_item_converter func)
{
    PyObject *pylist;
    gint size, i;
    GList *tmp = list;

    size = g_list_length(list);

    pylist = PyList_New(size);

    for (i = 0; i < size; i++) {
        /* Create each object */
        PyObject *item;

        item = func(tmp->data);
        PyList_SET_ITEM(pylist, i, item);
        tmp = tmp->next;
    }
    
    return pylist;
}

%%
modulename hildonhildon
%%
import gobject.GObject as PyGObject_Type
%%
ignore-glob *_get_type

%%
override hildon_mime_get_mime_types_for_category kwargs
static PyObject *
_wrap_hildon_mime_get_mime_types_for_category(PyObject *self,
                                              PyObject *args,
                                              PyObject *kwargs)
{
    static char *kwlist[] = {"category", NULL};
    PyObject *pyenum;
    PyObject *pylist;
    HildonMimeCategory category;
    GList *mime_types;


    if (!PyArg_ParseTupleAndKeywords(args, kwargs,
                                     "O:get_mime_types_for_category",
                                     kwlist, &pyenum))
        return NULL;
    
    if (pyg_enum_get_value(HILDON_MIME_TYPE_CATEGORY, pyenum,
                           (gpointer)&category))
        return NULL;

    mime_types = hildon_mime_get_mime_types_for_category(category);

    pylist = glist_to_pylist(mime_types,
                            (list_item_converter)PyString_FromString);

    if (mime_types)
        hildon_mime_types_list_free(mime_types);

    return pylist;
}
